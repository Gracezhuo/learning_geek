两阶段提交

两阶段提交协议是一种算法，可以使得分布式系统统一决定提交或者撤销一个事务。
在ZK中，你可以实现两阶段提交，通过通过一个协调者，创建一个transaction node，叫做"/app/Tx",
以及每个参与的站点创建一个子节点，叫做"/app/Tx/s_i"。当协调者创建子节点的时候，内容是为空的。
一旦每个参与事务的节点收到来自协调者的事务，这个站点读取每个子节点然后设置监视。每个站点执行查询然后
投票"commit"或者"abort"写到指定的节点中。一旦写入完成，其他站点将收到通知，并一旦所有节点都投票完毕，
它们就能决定是"abort"还是"commit"。请注意，如果某些站点投票选择“abort”，则节点可以更早地决定“abort”。

这个实现有趣的一面是协调者的唯一任务是决定所有参加的站点，以及创建ZK节点，以及传播事务给相对应的节点。事实上，
传播事务甚至可以通过写入transaction node 来实现。

上面描述的方法有两个重要的缺点。一个是消息的复杂性，是 O(n²)的。
第二个缺点是没办法通过临时节点检查站点失败。
为了通过使用临时节点能检查失败，前提是这个站点已经创建了节点。

要解决第一个问题，只让协调器负责接收事务节点的更改的通知，然后在协调器做出决定后通知站点。
注意，这种方法是可伸缩的，但是也比较慢，因为它需要通过协调器进行所有通信。

要解决第二个问题，可以让协调器将事务传播到站点，并让每个站点创建自己的临时节点。
